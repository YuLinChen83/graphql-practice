generator client {
  provider = "prisma-client-js"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model User {
  id             Int              @default(autoincrement()) @id
  email          String           @unique
  lastName       String
  firstName       String
  nickName       String
  website        String?
  notified        Boolean          @default(false)
  activated      Boolean          @default(false)
  birthday       DateTime?
  photo          String?
  gender         Gender?
  role           Role             @default(USER)
  password       String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime?        @updatedAt
  facebookId     String?
  googleId       String?
}

model Course {
  id             Int              @default(autoincrement()) @id
  title          String
  content        String
  price          Int
  specialPrice   Int?
  vedioUrl       String?
  remark         String?
  publishTime    DateTime?
}

model SystematicCourse {
  chapter        Int
  unit           Int
  title          String
  content        String
  vedioUrl       String?
  remark         String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime?        @updatedAt
  courseId       Int
  course         Course           @relation(fields: [courseId], references: [id])

  @@id([courseId, unit, chapter])
}

model OneToOneCourseReservation {
  id             Int              @default(autoincrement()) @id
  courseId       Int
  course         Course           @relation(fields: [courseId], references: [id])
  userId         Int
  user           User             @relation(fields: [userId], references: [id])
  startTime      DateTime?
  endTime        DateTime?
}

model CourseComment {
  id             Int              @default(autoincrement()) @id
  courseId       Int
  course         Course           @relation(fields: [courseId], references: [id])
  userId         Int
  author         User             @relation(fields: [userId], references: [id])
  content        String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime?        @updatedAt
}

model CourseCommentReply {
  id             Int              @default(autoincrement()) @id
  commentId      CourseComment    @relation(fields: [id], references: [id])
  userId         Int
  author         User             @relation(fields: [userId], references: [id])
  content        String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime?        @updatedAt
}

enum Gender {
  MALE
  FEMALE
  TRANSGENDER
}

enum Role {
  SUPERADMIN
  ADMIN
  TEACHER
  USER
}
